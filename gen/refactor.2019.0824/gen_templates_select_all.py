from .gen_functions             import print_log
# General variables
from gen.gen_functions          import Dash,Do_not_modify,Dash_Jinja,Do_not_modify_Jinja
from gen.gen_menu_functions     import auto_templates

def Gen_Templates_Select_All(Tab,app_folder):

    table_name = Tab['table']
    class_name = Tab['class']
    
    # ------------------------------------------------------------------------
    # SELECT ALL HTML template with pagination
    # ------------------------------------------------------------------------
    
    #file_name = app_folder+"/app/templates/"+table_name.lower()+"_All.html"
    file_name = auto_templates+"/"+table_name.lower()+"_All.html"
    #page_name = "./"+table_name.lower()+"_All"
    page_name = ".select_"+table_name+"_query"
    print_log("Creating '%s'..."%(file_name))
    f = open(file_name,"w")
    
    f.write(Dash_Jinja)
    f.write(Do_not_modify_Jinja)
    f.write(Dash_Jinja)    

    f.write(    '{% extends "base.html" %}\n\n')
    f.write(    '{% import "bootstrap/wtf.html" as wtf %}\n\n')
    # GV 20181110 code for pagination -->
    f.write(    '{% import "_macros.html" as macros %}\n\n')
    # GV 20181110 <--
    f.write(    '{% block title %}Collector{% endblock %}\n\n')
    f.write(    '{% block head %}\n')
    f.write(    '   {{ super() }}\n')
    f.write(    '{% endblock %}\n\n')
    f.write(    '{% block page_content %}\n')
    f.write(    '<!-- ------------------------ -->\n')
    f.write(    '<!-- gen_templates_select_all -->\n')
    f.write(    '<!-- ------------------------ -->\n')
    
    # FLASH Generation Code (Promoted to base.html generated by gen_collector_menu.py
    # FLASH Generation Code
    #f.write(    '{% with messages = get_flashed_messages() %}\n')
    #f.write(    '  {% if messages %}\n')
    #f.write(    '    <ul class=flashes>\n')
    #f.write(    '    {% for message in messages %}\n')
    #f.write(    '      <li>{{ message }}</li>\n')
    #f.write(    '    {% endfor %}\n')
    #f.write(    '    </ul>\n')
    #f.write(    '  {% endif %}\n')
    #f.write(    '{% endwith %}\n')

    
    f.write(    '<div class="page-header">\n')
    f.write(    '    <h2>%s:<h2>\n'%(Tab['caption']))
    f.write(    '    <a href="#" onclick="history.go(-1)"><img src="/static/img/back.png"  color=yellow width="32" height="32" title="" alt="Add"></a>\n')        
    f.write(    '</div>\n')
    
    f.write(    '<table class="table">\n')
    
    f.write(    '  <thead class="thead-dark">\n')
    f.write(    '    <tr>\n')
    for c in Tab['columns']:
        if c['is_form_editable']:     # GV 20181130
            f.write('        <th>%s</th>\n'%(c['header']))
    f.write(    '        <td><a href="/forms/%s"><img src="/static/img/add.png"  color=yellow width="32" height="32" title="" alt="Add"></a></td>\n'%(table_name))        
    for r in Tab['relations']:
        if Tab['gen_foreign_fields']: # GV 20181130
            f.write('         <td>%s</td>\n'%(r['caption']))
    f.write(    '    </tr>\n')
    f.write(    '  </thead>\n')

    f.write(    '    <tbody>\n')
    
    #f.write(    '    {% for row in rows %}\n')
    f.write(    '    {% for row in rows.items %}\n')
    f.write(    '       <tr>\n')
    counter=0
    for c in Tab['columns']:    
        if c['is_form_editable']:     # GV 20181130
            if Tab['has_fks']:  # If Table has FKs, then will print Foreign Value instead of FK
                if c['is_fk']:
                    counter+=1
                    Field='row.%d'%(counter)
                    Field = '"{:s}".format(%s)'%(Field)        
                else:
                    Field='row.0.%s'%(c['field'])
                    if (c['format'] is not None and len(c['format'])>0):
                        Field = '"%s".format(%s)'%(c['format'],Field)        
            else:
                    Field='row.%s'%(c['field'])
                    if (c['format'] is not None and len(c['format'])>0):
                        Field = '"%s".format(%s)'%(c['format'],Field)        
            f.write('           <td>{{ %s }}</td>\n'%(Field))
                                     
                                
    f.write('           <td>')
    f.write('<a href="/forms/%s?%s"><img src="/static/img/edit.png" width="32" height="32" title="" alt="Edit"></a>\n' % \
                            (table_name,Tab['code']['row_keys']))
    f.write('               ')
    f.write('<a href="/forms/%s_delete?%s"><img src="/static/img/delete.png" width="32" height="32" title="" alt="Edit"></a>\n' % \
                            (table_name,Tab['code']['row_keys'] )) 
    f.write('           </td>\n')

    for r in Tab['relations']:
        if Tab['gen_foreign_fields']: # GV 20181130 
            if Tab['has_fks']:  # If Table has FKs, then will print Foreign Value instead of FK
                keys=Tab['keys']
                query=''
                y=''
                for k in keys:
                    query   =   "field=%s&value={{row.0.%s}}"%(k,k)
                    y       =   ','
                href    =   "/select/%s_Query?%s"%(r['table'],query)        
                f.write('           <td><a href="%s">{{ row.0.%s.__len__() }}</a></td>\n'%(href,r['name']))    
            else:
                keys=Tab['keys']
                query=''
                y=''
                for k in keys:
                    query   =   "field=%s&value={{row.%s}}"%(k,k)
                    y       =   ','
                href    =   "/select/%s_Query?%s"%(r['table'],query)        
                f.write('           <td><a href="%s">{{ row.%s.__len__() }}</a></td>\n'%(href,r['name']))
        
    f.write(    '       </tr>\n')
    f.write(    '    {% endfor %}\n')

    f.write(    '    </tbody>\n')

    f.write(    '</table>\n')
    # Pagination code here
    if False:
        f.write(    '<p>')
        f.write(    '    {% if prev_url != None %}\n')    
        f.write(    '       <a href="{{prev_url}}"><img src="/static/img/prev.png"  color=yellow width="32" height="32" title="" alt="Previous"></a>\n')
        f.write(    '    {% endif %}\n')    
        f.write(    '    {% if next_url != None %}\n')    
        f.write(    '       <a href="{{next_url}}"><img src="/static/img/next.png"  color=yellow width="32" height="32" title="" alt="Next"></a>\n')
        f.write(    '    {% endif %}\n')    
        f.write(    '</p>\n')
    else:
        f.write(    '<div class="pagination">\n')
        f.write(    '    {{ macros.pagination_widget(rows, \'%s\') }}\n'%(page_name))
        #f.write(    '    {{ rows }}\n')
        f.write(    '</div>\n')
    f.write(    '<!-- ------------------------ -->\n')
    f.write(    '<!-- gen_templates_select_all -->\n')
    f.write(    '<!-- ------------------------ -->\n')
    f.write(    '{% endblock %}\n\n')

    # GV 20181110 include Pagination code -->
    #f.write(    '<div class="pagination">\n')
    #f.write(    '   {{ macros.pagination_widget(pagination, \'.index\') }}\n')
    #f.write(    '</div>\n')
    # GV 20181110 include Pagination code <--

    f.write(Dash_Jinja)    

    # <a href="/howto/howto_css_dropdown.asp">Dropdowns</a>


    f.close()          

